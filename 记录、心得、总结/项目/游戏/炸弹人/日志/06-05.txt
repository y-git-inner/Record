今日计划：

发布oopFrame。

发布重构oopFrame的过程。

加入GameSpec、PlayerLayerSpec测试并通过。

写出炸弹人的需求分析、用户故事、上下文。







完成内容：


增加oopFrameSpec -> 测试"子类虚方法实现抽象父类的抽象方法时，不抛出异常"、"非抽象类定义抽象成员时抛出异常"。


将children改名为impletationMap。
增加P_addToImpletationMap。
将P_prepareAndAddProtected、P_prepareAndAddPublic、P_addVirtual中“将实现方法加入到ImpletationMap中”的职责提取出来形成P_prepareCheck方法，并将原方法改名为P_addPublicMember、P_addProtectedMember。
将Structure -> P_check分解为P_checkImplementationOfAbstract、P_checkImplementationOfInterface。

将P_addPrivate、P_addStatic改名为P_addPrivateMember、P_addStaticMember。


将buildClass、buildAClass中的addOuterAbstract职责提取为_addOuterAbstract方法。
将buildClass中的备份F.prototype提取为_backUpPrototype方法。


将F中的恢复F.prototype和初始化分别提取为_restorePrototype、_init方法。


解决了“非抽象类定义抽象成员时不抛出异常”的bug：
在Class -> P_addSpecial中判断是否有Abstract，如果有则抛出异常。


将Structure的实例属性下移到子类中。

修改了_addVirtualToImplementMap。

将Structure写成原型形式，而Interface、AClass、Class不写成原型形式！

采用我的编程规范，将AClass、Class的私有函数前缀写成“__”(两个下划线)。



明日计划：

去掉oopFrame多余的注释，发布oopFrame。

发布重构oopFrame的过程。

加入GameSpec、PlayerLayerSpec测试并通过。

写出炸弹人的需求分析、用户故事、上下文。



难点：








已解决的问题及解决方案：








已解决但不知道原因的问题：





未解决的问题：











注意事项：










补充说明：






