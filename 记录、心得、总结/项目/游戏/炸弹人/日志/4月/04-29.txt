今日计划：


增加玩家人物上、下移动。

增加碰撞检测。





完成内容：


增加玩家人物上、下移动：

（1）状态类增加walkUp、walkDown方法。

（2）增加StandUpState、StandDownState、WalkUpState、WalkDownState状态。

（3）Context、PlayerSprite等类进行相应的修改。





明日计划：


增加碰撞检测。





难点：








已解决的问题及解决方案：


1、两个垂直方向的键同时按下时，玩家人物会斜着位移！


问题分析

如先按下A键，再按下S键（按住A键不放的同时按下S键），玩家人物会斜着往左下方位移（动画为往下走）！



原因

在WalkLeftState.js中可以过渡到walkDown状态。

如按下A键，则玩家人物为WalkLeft状态，并往左走(SpeedX不为0)。然后再按住A键不放，按下D键，则玩家人物会过渡到WalkDown状态，且往下走(SpeedY不为0)。因为此时玩家SpeedX不为0且SpeedY不为0，所以玩家人物的动画为往下走，但是会斜着往左下方位移！




解决方案

（1）WalkLeft状态只能过渡到StandLeft状态，即如下按下A键，再按着A键不放按下S键，则人物仍然为WalkLeft状态。

（2）玩家人物处于WalkLeft状态且往左走时，令Y方向速度为0；玩家人物处于WalkDown状态且往下走时，令X方向速度为0。


其余状态类推！




2、快速按键盘A、D（左、右），玩家人物有时不够灵敏！如何改进？



问题分析



原因

这是因为在绑定键盘事件的handler中清空了keyState（KeyEventManager.js addKeyDown、addKeyUp）。

因为玩家人物的状态是轮询判断的。假设轮询的间隔为20ms，
现在按下A键：

第1次轮询判断，window.keyState[keyCodeMap.A] === true，所以玩家人物往左走。

第1次轮询-第2次轮询之间，松开A键并按下D键，此时window.keyState = {
keyCodeMap.D: true
}
}

第2次轮询判断,因为WalkLeftState.js中stand方法的“window.keyState[keyCodeMap.A] === false”不满足，walkLeft方法的“window.keyState[keyCodeMap.A] === true”不满足，而walkRight、walkUp、walkDown为空方法（详见“已解决的问题及解决方案 -> 1”）。所以玩家人物会继续往左的按照期望得往右走！



解决方案

绑定键盘事件的handler中不清空keyState！





已解决但不知道原因的问题：








未解决的问题：









注意事项：










补充说明：






