今日计划：

完善“加入键盘事件，通过键盘控制人物移动。”

增加碰撞检测。





完成内容：


重构了玩家状态：

（1）状态的方法为stand、walkRight、walkLeft（还需要walkUp、walkDown）。

（2）在PlayerSprite -> init中设置玩家的初始状态。

（3）状态的判断与过渡放到具体的状态类中（如WalkLeftState）。



删除了空状态。

基本完成了在玩家状态中应用状态模式！

现在可以使用键盘控制玩家人物左、右移动了。





明日计划：


增加玩家人物上、下移动。

增加碰撞检测。





难点：








已解决的问题及解决方案：




1、实际测试时，如玩家人物当前状态为WalkLeftState，往左走,则每次game.run时只显示第一帧！


问题说明



原因分析

这是因为在WalkLeftState -> walkLeft中调用了setAnim("walk_left")，而此方法每次调用时都重置当前帧为第一帧！


解决方案


Sprite.js -> setAnim方法中，不再重置当前帧。

在WalkLeftState中除了walkLeft的方法中重置当前帧！







已解决但不知道原因的问题：

//* 05-03测试该问题时，“keyState[e.keyCode] = false/true;”能够正常工作！，故用“window.keyState[e.keyCode] = false”或“keyState[e.keyCode] = false”均可！


                    //1、实际测试时，按键A键，window.keyState[keyCodeMap.A]为undefined！（window.keyState还是为空对象{}！）


                    //问题说明



                    //原因分析

                    ////KeyEventManager.js -> 绑定keydown函数addKeyDown中，修改的是//KeyEventManager的属性keyState，而不是全局的keyState！



                    //解决方案

                    //在addKeyDown中，修改全局keyState：

                    //window.keyState[e.keyCode] = true;


                    //addKeyUp同理修改。





未解决的问题：

//1、快速按键盘A、D（左、右），玩家人物有时不够灵敏！如何改进？







注意事项：










补充说明：






