今日计划：


加入1个敌人，敌人使用A*寻路算法寻找到玩家人物的路径，并自动走过来。







完成内容：



重构了状态类、PlayerSprite :
删除多余代码。
将checkPassMap设置成私有方法，增加P__checkMapAndSetDir。
PlayerSprite -> changeDir 改名为setDir。
删除PlayerSprite.completeOneMove。
在WalkState_X/Y -> move中判断spring.moving，将取整也放到此处。

修改了PlayerLayer -> render，缩小了“if (this.P__isChange())”的范围。

修改了PlayerLayerManager -> change的判断条件，现在精灵在移动时（一个移动步长内移动）也会调用layer.change()。


解决了“如果先按下A键，然后松开，玩家精灵类往左行走一个移动步长后停下，页面显示的仍然为上一帧(行走的一帧)（画面上来看，精灵类站立后可能仍然保持行走的姿势）。”的bug。

地图扩大成20 * 20.







明日计划：

加入1个敌人，敌人使用A*寻路算法寻找到玩家人物的路径，并自动走过来。




难点：








已解决的问题及解决方案：

1、如果先按下A键，然后松开，玩家精灵类往左行走一个移动步长后停下，页面显示的仍然为上一帧(行走的一帧)（画面上来看，精灵类站立后可能仍然保持行走的姿势）。



问题描述



原因

玩家精灵类行走完一个移动步长后，会调用WalkState.stand()，状态会转换为StandState，但是本次轮询及下次轮询中(调用PlayerLayer.render)PlayerLayer.P__isChange返回false（因为在PlayerLayerManager -> change的判断中，既没有keydown事件，sprite.moving也为false，故不调用layer.change()），故不执行draw，故不能刷新页面为当前帧（站立的帧）。





解决方案

PlayerSprite增加站立标志stand，WalkState -> stand中设置该标志为true，在PlayerLayerManager -> change中对该标志进行判断并重置。






已解决但不知道原因的问题：








未解决的问题：








注意事项：










补充说明：






