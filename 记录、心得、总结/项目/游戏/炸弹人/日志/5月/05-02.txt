今日计划：


完成与精灵的碰撞检测。





完成内容：


PlayerSprite.js -> checkCollideWithMap改为检测矩阵碰撞。



重新设置了bomberConfig.player：
指定玩家图片大小（与地图单元大小不一定相同）、指定图片截取偏移量、截取范围等。




Sprite.js 增加dirX、dirY


修改了PlayerSprite -> move：
更改x、y计算算法。
在init中计算stepX、stepY。








明日计划：








难点：








已解决的问题及解决方案：


1、玩家人物图片空白太大（矩形区域太大），导致玩家不好判断是否能够通过地形（与地形进行碰撞检测）。



解决方案：

缩小图片的截取范围




2、在玩家人物状态中，若玩家人物向上走（WalkUpState），然后停下（StandUpState），然后按下S键。玩家人物会先向上走一下，再往下走！而不是直接向下走！



问题分析


玩家人物向上走，然后停下时，会调用WalkUpState -> stand，玩家人物状态会变为StandUpState，但是sprite.dirY还是等于-1。

然后按下S键之前有一个间隔时间。在这段时间里，因为PlayerSprite的state为normal，所以LayerManager -> render 中不会调用changeDir，即不会调用StandUpState.stand()，所以sprite.dirY仍然等于-1。

按下S键后，会调用StandUpState.walkDown()，玩家人物状态会变为WalkDownState。但sprite.dirY仍然等于-1（因为没有调用WalkDownState.walkDown()）。所以在调用sprite.move()（LayerManager -> render）时，玩家人物会继续向上走。

在下一次轮询时，会调用WalkDownState.walkDown()，sprite.dirY等于1，所以玩家人物会向下走。




原因

状态过渡时，没有调用过渡后的状态的方法。





解决方案


状态过渡时，调用过渡后的状态的方法。

如在StandUpState ->　walkDown：
...
this.P_context.walkDown();







已解决但不知道原因的问题：








未解决的问题：











注意事项：










补充说明：






